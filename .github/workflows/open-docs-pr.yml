---
name: Open a pull-request on the celo-org/docs repository

on:
  workflow_call:
    inputs:
      commit:
        description: 'Commit of the developer-tooling repo that the submodule will be updated to'
        type: string
        required: true

  workflow_dispatch:
    inputs:
      commit:
        description: 'Commit of the developer-tooling repo that the submodule will be updated to'
        type: string
        required: true

jobs:
  open-docs-pr:
    name: Open a pull-request on the celo-org/docs repository
    # TODO: ask the correct runner for this workflow
    runs-on: ['self-hosted', 'org', '8-cpu']
    # TODO: ask correct permissions
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Fetch secrets from AKeyless
        id: fetch-secrets
        uses: docker://us-west1-docker.pkg.dev/devopsre/akeyless-public/akeyless-action:latest
        with:
          access-id: p-kf9vjzruht6l
          api-url: https://api.gateway.akeyless.celo-networks-dev.org
          dynamic-secrets: '{"/dynamic-secrets/keys/github/docs/contents=write,pull_requests=write":"DOCS_TOKEN"}'

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: 'celo-org/docs'
          submodules: 'recursive'
          fetch-depth: 0 # is this necessary?
          # TODO: swap to main
          ref: chore/docs-sync
          token: ${{ env.DOCS_TOKEN }}

      - name: Open pull-request
        env:
          COMMIT: ${{ inputs.commit }}
          REPOSITORY: 'celo-org/docs'
          DOCS_CWD: 'celo-docs'
          # TODO: swap to main
          BASE_BRANCH: chore/docs-sync
          NEW_BRANCH: 'ci/${{ github.run_id }}-${{ github.run_attempt }}'
          BOT_NAME: 'github-actions'
          BOT_EMAIL: 'github-actions@github.com'

        run: |
          set -x

          # Setup the committers identity.
          git config user.name $BOT_NAME
          git config user.email $BOT_EMAIL

          # Create a new feature branch for the changes.
          git checkout -b $NEW_BRANCH

          git submodule sync
          cd submodules/developer-tooling
          git fetch --all
          git remote update
          git remote -v
          git checkout $COMMIT
          cd ..

          git status
          git add .
          git commit -m "chore: update developer-tooling submodule"
          git push origin $NEW_BRANCH

          echo "$DOCS_TOKEN" > token.txt
          gh auth login --with-token < token.txt
          gh pr create \
            --body "Update developer-tooling submodule to $COMMIT\n__I was created by a bot beep boop__" \
            --title "chore: update auto-generated docs reference from developer-tooling" \
            --head "$NEW_BRANCH" \
            --base "$BASE_BRANCH"
