name: Upload celocli executables

on:
  release:
    types: [released]

jobs:
  upload:
    name: Upload executables to a specific @celo/celocli release
    runs-on: [macos-latest]
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      repository-projects: write
    if: contains(github.ref_name, 'celocli') == true
    steps:
      # - name: Fetch secrets from AKeyless
      #   id: fetch-secrets
      #   uses: docker://us-west1-docker.pkg.dev/devopsre/akeyless-public/akeyless-action:latest
      #   with:
      #     access-id: p-kf9vjzruht6l
      #     api-url: https://api.gateway.akeyless.celo-networks-dev.org
      #     dynamic-secrets: '{"/dynamic-secrets/keys/github/homebrew-core/contents=write,pull_requests=write":"HOMEBREW_TOKEN"}'

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-tags: true

      - name: Checkout Homebrew Repo
        uses: actions/checkout@v4
        with:
          repository: 'Homebrew/homebrew-core'
          path: '/Users/runner/work/developer-tooling/developer-tooling/homebrew'
          fetch-depth: 0
          ref: master

      - name: Sync workspace
        uses: ./.github/actions/sync-workspace

      - name: Extract celocli published version
        id: extractCelocliVersion
        run: |
          version=$(echo ${{ github.ref_name }} | cut -d' ' -f1 | cut -d'/' -f3)
          echo "celocliVersion=$version" >> "$GITHUB_OUTPUT"

      - run: yarn
      - run: yarn build
      - run: |
          cd packages/cli
          yarn run homebrew
          ls dist
          cat Formula/celocli.rb

      - name: Upload executables on the github release
        run: |
          # TODO: remove the flag --clobber if --force is NOT set
          gh release \
            upload @celo/celocli@${{ steps.extractCelocliVersion.outputs.version }} \
            --clobber \ 
            packages/cli/dist/*.tar.xz

      - run: brew update
      - run: brew cleanup
      - run: ./homebrew/scripts/test.sh

      - name: Open pull-request on Homebrew repo
        if: ${{ env.HOMEBREW_TOKEN }}
        env:
          BOT_NAME: 'celo-org'
          BOT_EMAIL: 'celo-org@github.com'
          FORK_REPOSITORY: 'celo-org/homebrew-core'
          UPSTREAM_REPOSITORY: 'Homebrew/homebrew-core'
          BASE_BRANCH: master
          NEW_BRANCH: 'ci/${{ github.run_id }}-${{ github.run_attempt }}'
        run: |
          set -x

          cli_workspace=$(pwd)
          cd /Users/runner/work/developer-tooling/developer-tooling/homebrew

          # Setup the committers identity.
          git config --global user.name $BOT_NAME
          git config --global user.email $BOT_EMAIL
          git remote add fork $FORK_REPOSITORY

          # Create a new feature branch for the changes.
          git checkout -b $NEW_BRANCH
          git fetch --all
          git status
          cp $cli_workspace/homebrew/Formula/celocli.rb ./Formula/c/
          git add ./Formula/c/celocli.rb
          git commit -m "chore: update celocli to ${{ steps.extractCelocliVersion.outputs.version }}"
          git push fork $NEW_BRANCH

          RELEASE_URL="https://github.com/celo-org/developer-tooling/releases/download/%40celo%2Fcelocli%40${{ steps.extractCelocliVersion.outputs.version }}"
          cat >/tmp/pr-body.md <<EOL
          Update celocli formula to [${{ steps.extractCelocliVersion.outputs.version }}]($RELEASE_URL).

          ðŸ¤– _This pull-request was opened by a robot beep boop from https://github.com/celo-org_ ðŸ¤–
          EOL

          echo "$HOMEBREW_TOKEN" > token.txt
          gh auth login --with-token < token.txt
          gh pr create \
            --body-file /tmp/pr-body.md \
            --title "celocli ${{ steps.extractCelocliVersion.outputs.version }}" \
            --head "$FORK_REPOSITORY/$NEW_BRANCH" \
            --base "$UPSTREAM_REPOSITORY/$BASE_BRANCH"
