name: 'Test a third party library'
inputs:
  inputs:
    library:
      type: string
      required: true
    version:
      type: string
      default: 'latest'
runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: 'enable corepack for yarn'
      run: sudo corepack enable yarn

    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
    - name: Restore node cache
      uses: actions/cache@v4
      id: cache_node
      with:
        # We need to cache all the artifacts generated by yarn install+build
        # Update this list also in .github/actions/sync-workspace/action.yml with exactly the same list
        path: |
          ./.yarn/cache
          ./.yarn/install-state.gz
          node_modules
          packages/**/node_modules
        key: node-${{ runner.os }}-${{ runner.arch }}-${{ env.NODE_MODULE_CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          node-${{ runner.os }}-${{ runner.arch }}-${{ env.NODE_MODULE_CACHE_VERSION }}-
    - name: Install yarn dependencies
      run: git config --global url."https://".insteadOf ssh:// && yarn install
      if: steps.cache_node.outputs.cache-hit != 'true'
    - name: Run yarn postinstall if cache hitted
      run: yarn run postinstall
      if: steps.cache_node.outputs.cache-hit == 'true'

    - run: |
        cd packages/e2e
        yarn
        yarn add ${{ github.event.input.lib }}@${{ github.env.input.version }}
        yarn run test-e2e:${{ github.event.input.lib }}
