name: "Run with Foundry"
description: "Run commands with Foundry in a Docker container to avoid GLIBC compatibility issues"
inputs:
  command:
    description: "The command to run with Foundry"
    required: true
  artifacts_to_cache:
    description: "List of artifacts to recover from cache"
    required: true
  use_docker:
    description: "Whether to use Docker for Foundry compatibility"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Sync workspace
      uses: ./.github/actions/sync-workspace
      with:
        artifacts_to_cache: ${{ inputs.artifacts_to_cache }}
    
    - name: Run with Foundry (Docker)
      if: ${{ inputs.use_docker == 'true' }}
      shell: bash
      run: |
        docker run --rm \
          -v "$RUNNER_WORKSPACE/developer-tooling:/workspace" \
          -w /workspace \
          -e NODE_OPTIONS="$NODE_OPTIONS" \
          -e TERM="$TERM" \
          ubuntu:22.04 bash -c "
            apt-get update && apt-get install -y curl ca-certificates gnupg lsb-release
            curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
            apt-get install -y nodejs
            npm install -g yarn
            curl -L https://foundry.paradigm.xyz | bash
            source ~/.bashrc
            foundryup
            ${{ inputs.command }}
          "
    
    - name: Run with Foundry (Direct)
      if: ${{ inputs.use_docker != 'true' }}
      shell: bash
      run: |
        curl -L https://foundry.paradigm.xyz | bash
        source ~/.bashrc
        foundryup
        ${{ inputs.command }} 